<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAbout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAABgWlDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT8TNSKKhSlELBY8GrVREUuJYhAMSIzgVbi7MVHIrmE3wcZSsA1YeDRGLWystbWwFQTBA8ResFK0
        EVn/SQIJQgQHhvl4M+8x8wZ8+ZRpubWjYNkZJxoOaXPzC1rghQD1QCe9uummIzMTMaqOzztq1Hrbr7L4
        32iOr7gm1GjCo2bayQgvCw9vZNKK94SD5qoeFz4T7nPkgsIPSjeK/Ko4WWCfygw6seiYcFBYS1awUcHm
        qmMJDwl3xS1b8n1zRY4r3lRspbJm6Z7qhU0r9uyM0mV2EGaSCNNoGGRZI0WGflltUVyish+q4m8v+KfF
        ZYhrDVMc46xjoRf8qD/43a2bGBwoJjWFoO7Z8967IbAD3znP+zryvO9j8D/BpV32r+dh5EP0XFnrOoSW
        LTi/KmvGLlxsQ9tjWnf0guSX6Usk4O1UvmkeWm+gcbHYW2mfk3uISVdT17B/AD1JyV6q8u6Gyt7+PFPq
        7wejVHK6kB8bnwAAAAlwSFlzAAALEQAACxEBf2RfkQAAAAd0SU1FB+kHBgIUAEf+YB0AAAAZdEVYdENv
        bW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAARGUlEQVR4Xu1ceXRc1Xm/352R8Ab0kCblcGjTkPaP
        5JANCG0TKC1OU2wBLjYRrh3b1Bhj7BKvkmak0cy8ZUZgsB0bYwMxDpCWpTgBG4x3y5KsZaTZF8mhJqQc
        mo3SQEpTDLbUc982933vvtHMSJYT4HfO77w39333u9/3e/e++9Yh5GN8jI/xMUaHZ+5GL6x5+UoI9C4k
        SqYZQgPbQEo+TtTMLqJknjf4IyKnn9eoGNTWje3WNmPdqsevG1Sz2hLUzC6Qkt+HcHwLSEkfBHrnwoof
        fRlmNntwjL9zoMue+gQE++4GJbOXRPL/S9pOjJDooJgRAd3KNRYEZaiuRsOOb6vtxDBRM78BKfE8tMbm
        eeo3Tcaxn1PQhkOXg5x+kkQH3yPRodGFKou8YFi80X670IxJzb0F4XgQFj00DecyofDe88NPsuFCIoUz
        ReGGRkiEUZBAVWTimALxSzfR3MoRNSGzP4WWrutxXhMC6u+cSdTsr8rvZTh53MNE28fCcn3lT0MwdjfO
        76yCBmNrSbRwunzxxkKcMKZpg+3x7xJl0cFhaO29E+d5VgChgRZ9mOJEyyGfxFgoEkS07kZUXz82vg8t
        nVfifMcV0NK9pKxeJ7QpJzER+WT5pcifWzlfF9mZsbKlnE7TG5UanPe4gDZ3XKnPsjiwcumWWDksJSAu
        w+2UKkftRIdGINC9COc+Znjr1VqiZLPuQ1cQjIPl2FRD7Ff0G4soElQnKOk0zn/MgHB8hbt4oqBFHNVm
        WFA2Oh0jgheJX2Ibl+1tQyOeVXs+jzWoGp5bo5NAzf7cGSgOCJdNMK34cCyi3lZCQNYLg32rsQ5VA1p7
        F7O9ghtxZSmhzSsBnqJyNz8iG0xcxyIvlEjUIkFKPIN1qBogp3tLB1YGjeQgkjsFSuYwkVP3gRS/E+TE
        LRCK1YEUq4NQfx2E++ogZDJWB8HeOhLqrYNgj7aus6eOsmUoVg/hgXuImt0KcvKktpNLiugmoLG06hXY
        FUof1qEq0JV7PstOMm3HP74hR5CmjWFvJVR4F+RkM124/SLcxnigZo4CEOi+AdTsq+4imqLh3ocFHBwh
        SuZ13EZVgHB8jbVnhQHhMkRWT839BHwdn8O+zwbgnl0XEjXX7x6vG5GtlHob+64KIKf3i4PBFAShMf8W
        9R29DPs9m4CVuy8j0cIpZ2z8UkTOXh4HAb0rnqXaPb2Spy84SHP46r2Whvom9iLdAMipPc4dj0QSimdQ
        Sr2JfVYM6jv2JXLvjw1RcDCYfBBMPCZi/k3P/K2TsN+JAERyrc5jodUDh50C8h2ALfNjP5mmwdhi/R4f
        mkBGE9OoA3Jy/E4FKgS0DfptN3ZxjCLheMrJg9hnxaChga2OIEoGZK7rAmq3vM4RQEo8YcXqiBeLZ6xz
        diAntmKfFQPkTKdNQF5ENwE1uyH2DGIEmrv+FvucKICSStni1mIWiIZjN5Y0cPyfsc/KoeZ+7eiBQuJj
        iF7HO2/TH2CXEwG68JFJJJJ/vxizm2iYnIANB67FfitCze0PX6Y/UUMzcEkhiwKCkj6JfZYCbTz8WRLJ
        rQU5tYb4OpaS1th1dO6D52O7ckAbDn3V/dzVJBbTtm3Yc9vGqtq2QAPdt1gTSMlABNQmkNQu7LMUam5o
        oKCkjxaHHGu38AGR03vA3/n32L4UqBRfJh41vFAlBKxw5wsB4bhkE9ARDKYRhJE8hON+7HM0eBr2f5pE
        C+/Y2tOOp0MjREruh1UvXoLriABS8nvFHSGI0W3oGgSlsp0vBMjpF0qK5yhDAgZiM7HPcgDBvsXWw3i+
        LUZ2S63p6JdxHQeUTHECcQjHl3G/ufYgGAtglxUDIrmfuIqHRePXmX3b0DD91vqLsc+yIad2i3uQJuKb
        sO6A66Wh5+bWWvaY0hknLxjugfzOHxyBluNV7XwLkxZuOB/Yg3LTqUM4t8AMezn9BvZZCWDNvktIJP/f
        QhG1npiJk5t8wgc/nnX79QnEFjuOE4tnF9Az77ufwn4rAvUdu8ZqvKSAArI9KCVf5P15lj11MYQH5vJl
        owGCseUO8axEh0Yg2C98hguh/ruc9cy6IhG5dRa7kvpP7LNi0GDsO+IgMAXBsCDkdJj3B629t5BI7g1Y
        /uwFfHkp1M6NTCWR/Ad24Rj1dVAyJ7xrDgKuR+RUcQIRiodp9w9Sajd2WTFASj7mDEJEMwCOLIhQ/yyb
        v1Bc1iYkKbGTLx8NIKf0YWxry1i2nRiha/Z9wVFHzcadcYsEwzRiDydsO78qgJxKOk6gR6WZ2NCw547H
        /sTmMFp42ghwGJqP32Tb5oKa+uj5xVdH+OQNsmSD9ltltUu21xA1975rbOUIGIrbdn7FOG/pDi8oWe5m
        JA6C/42pDd//wj4hFO8p1sv/gq7e+0fYBgOC/f9o731OgpzcwNfxrNt3lf3hl7NOSbYNDtNvb7mU91kx
        PMue+Xz5T+BwENoMfAD7hGB/v2XPRFFS+z3zH6bYzgSdc28tkdN593b0tkBKPGqrF4zpE0jJem7UHqj/
        kvdXFSDQfZvzGOJGvWGL2kE40ebwKSXb7XZDIyQ0sIku2uGYBLy+A5RIyZ3OGMy2jKXWVnw7XxfMCcQR
        p8iHXTxGkJKOnV85wslI6SBKUD8u1WOXIKd3Om2H2HOHI+A7NgMWbLvQMzsyCdYdmg5y+kjZ7UuJZls7
        SjoprovEd6xbM3CE91cVQEq+IA4C07739CCGRrx3PflnAp/fcdY3Znkm5L0/Hib3nhgu/9BhJBzosc4t
        a+rbaomaO+WMHfc23As5f609t9gjrwIgZ15zD0JUxgUkp9/B/hjomgN/bhPH4d+lzNGWua7b0+W7rrba
        WLv3Cvs1NBbNjcX2vXfs+GN75BXivIVbLyBqvroXfBiVbAf2aUFOH3fYl02BgG1DI3TBNus8EMLxJc57
        gKgOLxjvUzv5T71lD7gK0IaD11R2/w8FFI5vwj5NQKBnpvMatRziHmOQ+Wg88k2rASWzVT8kCOJyENno
        V0/7bAFXAwj23+0QsGSyfKDaBPJt7NMGKfmclaTIr6OcTxYJwOzkxL+YrkFOdYvrl2KxXZATUXuwVQDk
        5JbKBOTthka8y//1cuyTB13+9DQSEbx2UbI9nDCfeGEYWjq1TxQgGGshbaKdgH1gan5GoKVzDo63YoCS
        PlbZJRyXjJJ913uT3/Xk2ARtOnoBSMl94kSxX5wsL6RBNfeqd/H2ad4bfF6QUymnr1J+TAHZA7AN9svP
        agBy+tfuSY1COXUc+3NDzbyNQIN9S0kkX+ZLm3yyxvGPI4T1Z7jQ1P4lEuWfxmFfImpXID/HMVaMmvoN
        l7IbAZX1wCJBquJB9Oz1U2iwfxGRkrtJJP8/4rY58dTsa9DSvYo2H19O5HTGEipaOEP8nX/DXEKwLywW
        EPniBZRSz+PQKgYNx69zHP8qIIT6W7HPSjD1xsYauuqla0BJPgiRwruOONTcabpyt3WS7l3yg2lEzZ4o
        Hgpyr8IdO6fQGQ21oGTyjvolCOFxeIOCNrbfqfeAap4DawLK2Ge1oGtfvoQomQPFHsYu25KOC31o7rja
        uuXFGE5s1sp97VdYD9ZHiz86NOJZ/cLoD6pGA1VzPqvB0Rq1WDwIEyV9BPscCzyz/LWgpPXJRmujMAz+
        9q9gOwjH77NGTnRwmDZ3/LVWHuxTbLloS3P4clQyv6yZsWrUyW9U0EDPg3qDouNQOSwMQ3PX32G/Y4Fn
        5a6LSCT/hikEKOlE7a1hr83mWw9MAtUYssxGzZ2E+ugUb/39xnctRnwunQKkxOO8v6pB/V3brCHMN+bS
        sJj5t4nv2Dew77EAmjtu0N/RNgQSHGuhsf0q7S0Gs8dJiS1auf/YlbZynA+7HPS3z8D+qgJtPv6QYxKp
        SDzrNIN9Gf4sNBz8hnZjdBwAoYGHLRGi+VPQ1O44ZkEwplqjRx/u2pthEI6vL9ZFMbMH9TdvsPXoqkGV
        jP4FpqghV/LHFG6d1Wd3RiL590gklyNK5hCRU/sJO4HmGU7olIwlIoQTz3nnbZ3qnf/g+UTNWg/6Qckk
        PTMCtp0Dc+9nd7FzVuxq7iSdt2UazGmbbM3WZmymn1C/wvsYE2hL9yJHDxTRth0JyO/pcaL5oiP1tV+n
        vZprbgvGQjgHaDh0lfUolNmYQ7np6Nf4w4DGSP7/YOXu6t+ewKANh79Q0Q1Nm4CC2c0WrMu6yMa5/Qw0
        HtaOqxDq31y0KbwPviNX4DwgGJOKdQtnoKVLe88PpMQm3j+E45Wf+JdC7YLNAGruZ1YjQqHcytDw5UXh
        y7FNOeVsqeb+A5b94EI6d+NkomROWPZqNuut85/H5+Gtv99LZOPWvl73FVj82BSYv3kyKJlXdL/5d+g9
        z41f7zMB4cQDwuRdKRAWiyDyJSrDX2piYaXEk1qMjYevJpGCdZIMYedtKNp0+ItFmyH2sGijVre581rS
        NniGBPvHfuUhgnf13kshUvitIDkXCnqhWJyxU3sG0j2bxQnB/uIwjRTO0JaOv8C5QGusxbKJDp6h/mNf
        Z+U0cHwZuW3L+My8IljHEJwASkZfFwhYksymwjqaAKZd/lew+sVP0Rtba4iULr4DqGQGyW1bbN+jeP7p
        MQ+RkgPFWHOveBbvmMLbnBXU3LiWXYx3ORMXJFexDab90wK7L4E/bSgn97A4Yd2+L7KZ1BIxFL8P5wKN
        Ry4n0YL+FwWsB7OJZCLgWf3iJ0DNFm8XnRMKBGRkx7SW7sUsTgj0NBXPXQunofHIX+JcINDXVBzKhTPa
        cXAiULPimYtANl76xkkIk3RJ2GHD9zq3Ong7Z6fVzb8Dq1/+zHkz/BTkVJclkJodJPMesf0nFizY7gHF
        +N5ZtznpWfL9qbzN2cO1Kzy0tc/HvvV1CskPM5chh5N3XRf95suc/kFOdcAsicKqly4jkfxvrGEa7l+P
        06ANBz9HooXfFm3i38U2ZxV07d6L2V/JkUi+/Fv+5dpVXMcQUrsU62tk8UGgZyn3tfpp8Lc7hjKxn2AP
        g1+/7TWhqJkjTaYtXf8AcvIR9iY8KOkP9MC5rx+tZxZmr0HUtnPr5WzDdkUx34OGA5d7ZocA5OReS6BI
        dpAu3GGflVu6vloUkN32yr4Ki753bv+5raZundc7f/Nn6MrdfwVy4nqQU9NBSU8HNTMd1GxxycqUzHSI
        sHW2zE8nKrNjv5ldVt+mpqcTrT6zT1/P1omslV3PfBElrYvE91g5nfbOUmrp6t2XQCRnvZgO4fgDfKz2
        SzzTZuAh3uZDD1i555PaLShbr2VDeUB/pa7l+HxOoGGipB8lzV23E/Z2GBslVg81Roj+XHk6budDDfB3
        zSx+MG32xvxpaO76mrY9HN9VFNH4yslYgpw8Bq0994Oc+qH+f4esbu6ntYs2n9uhPNGAcOKh4nHREEvJ
        /DtZtG2qZ/lTf0jU3C9sw5WJF+htsvnwd84gkbwmIkj9a/htH3p4Fjw6Rbt8M4awJWI4vo1tp/6Om2wC
        Khnxx4Ny8t+07WpmXB+I/V6ANh3+ConkT6E3FYbB1669sQWh/sfNcggPHML1GaC15z7dJp/E2z4SoMFe
        v9UDzV4Yyb0Otz9+Ib3zSfb/Ma8bZT+Dm2Xn8xkl/bLRA4/iTR8J0FsjFORk8VLO7HFy8gm2HXwd07XZ
        lx0DQ/0Pe+ZGrNtY0Nx1tzkzg5Lw2Rx/lAArX/pTEsm9bRexwN6f1l5Xg3B8szYTM6qZ14iafZpIybR5
        0g5q9mTt0p1j+zr99x3Ud+zrEIwtg9beZRDoYcu7oKldu/nqmSPXgpR8irvUK/ZUJZ2mDYc+jf19DAHo
        2n3XEDmxnqiZJ0BJbqGBztl0VsPv/l/Dfxjx/7jqXDxpAwnAAAAAAElFTkSuQmCC
</value>
  </data>
</root>